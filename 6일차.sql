--315PAGE
--학번, 이름, 학과번호, 학과이름을 출력하여라
SELECT STUDENT.STUDNO, NAME ,STUDENT.DEPTNO D1,DEPARTMENT.DEPTNO D2,DNAME
FROM STUDENT, DEPARTMENT
WHERE STUDENT.DEPTNO = DEPARTMENT.DEPTNO ;--내부조인(INERJOIN)

--카티션 프로덕트 (두 테이블 행의 곱)
SELECT COUNT(*)FROM DEPARTMENT d; --학과 갯수 확인

SELECT STUDNO,NAME,S.DEPTNO ,D.DEPTNO --DEPARTMENT를 풀네임으로 쓰지말고 별칭으로 써야함 
FROM STUDENT s ,DEPARTMENT d 
WHERE S.DEPTNO =D.DEPTNO ;

--전인하 학생의 학번,이름,학과이름,학과위치를 조회
SELECT STUDNO,DNAME 
FROM STUDENT s 
WHERE NAME = '전인하';

SELECT STUDNO,NAME,DNAME,LOC
FROM STUDENT s ,DEPARTMENT d
WHERE NAME='전인하' AND S.DEPTNO=D.DEPTNO;

SELECT *
FROM DEPARTMENT d ;

--몸무게가 80KG 이상인 학생의 학번,이름,체중,학과이름,학과위치 조회

SELECT STUDNO, NAME, WEIGHT, DNAME, LOC
FROM STUDENT s ,DEPARTMENT d 
WHERE WEIGHT>=80 AND S.DEPTNO = D.DEPTNO;
 
--1호관 소속 학생의 학번,이름,학과이름 조회
SELECT LOC, STUDNO, NAME, DNAME 
FROM DEPARTMENT d ,STUDENT s 
WHERE LOC='1호관'AND S.DEPTNO = D.DEPTNO;

--ANSI 99(SQL 표준이다)
SELECT  STUDNO, NAME, LOC
FROM DEPARTMENT d 
NATURAL JOIN STUDENT S 
WHERE LOC='1호관';

SELECT  STUDNO, NAME, LOC
FROM DEPARTMENT d 
CROSS JOIN STUDENT S 
WHERE LOC='1호관';

--자연 조인을 사용하여 학번,이름,학과번호,학과이름 조회
SELECT STUDNO, NAME, DNAME, DEPTNO 
FROM  STUDENT s
NATURAL JOIN DEPARTMENT d ;--작동하게 할려면 같은 이름을 비교하면 됨

SELECT *
FROM  STUDENT s
NATURAL JOIN DEPARTMENT d ;

SELECT *
FROM  STUDENT s,DEPARTMENT d
WHERE S.DEPTNO =D.DEPTNO ;

--JOIN ~ USING, JOIN ~ ON
SELECT  *
FROM STUDENT s 
JOIN DEPARTMENT d  USING(DEPTNO);--사용해서 조인하겠다

SELECT  S.STUDNO
FROM STUDENT s 
JOIN DEPARTMENT d  ON S.DEPTNO =D.DEPTNO;

--NATURAL JOIN을 사용 교수번호 교수 이름,학과 번호 학과 이름 조회
SELECT PROFNO ,NAME,DEPTNO ,DNAME 
FROM PROFESSOR P
NATURAL JOIN DEPARTMENT d; 

--교수별 급여 등급을 조회,대상테이블 :professor,salgrard NON EQUT 조인
SELECT *FROM SALGRADE;

SELECT PROFNO ,NAME ,SAL ,GRADE
FROM PROFESSOR,SALGRADE
WHERE SAL BETWEEN LOSAL AND HISAL;

SELECT PROFNO ,NAME ,SAL ,GRADE
FROM PROFESSOR p 
INNER JOIN SALGRADE s 
ON SAL >=LOSAL AND SAL<=HISAL;

SELECT *
FROM STUDENT;

--학번,이름,교수번호,담당교수이름 조회
--SELECT얘가 ,PROFNO,NAME,DEPTNO
--PROFSSOR ,PROFNO,NAME,DEPTNO 이렇게 동등하게 들고있어서 NATURAL은 사용불가
SELECT DISTINCT PROFNO 
FROM STUDENT
JOIN PROFESSOR USING(PROFNO);

SELECT *
FROM DEPARTMENT d ;

--학번,이름,교수번호,담당교수이름 조회하는데 담당교수가 없는 학생도 출력
SELECT STUDNO,S.NAME,PROFNO,P.NAME 
FROM STUDENT S
LEFT  JOIN PROFESSOR P USING(PROFNO);

SELECT STUDNO,S.NAME,PROFNO,P.NAME 
FROM PROFESSOR p
RIGHT  JOIN STUDENT s USING(PROFNO);

SELECT STUDNO,S.NAME,PROFNO,P.NAME 
FROM PROFESSOR p
FULL  JOIN STUDENT s USING(PROFNO)
ORDER BY STUDNO,PROFNO;

-- (+)

SELECT *
FROM STUDENT s ,PROFESSOR p 
WHERE S.PROFNO = P.PROFNO(+);

SELECT *
FROM STUDENT s ,PROFESSOR p 
WHERE S.PROFNO(+) = P.PROFNO;

--탄생 월별 학생 숫자 구하기
SELECT M,NVL(CNT,0) CNT  --nvl은 널값을 처리하기 위해 사용하는 함수
FROM(
SELECT TO_CHAR(BIRTHDATE,'MM') M, COUNT(*)CNT 
FROM STUDENT s 
GROUP BY TO_CHAR(BIRTHDATE,'MM')
)A
RIGHT JOIN (
SELECT LTRIM(TO_CHAR(ROWNUM,'00'))M
FROM STUDENT s
WHERE ROWNUM <=12
)B USING(M)
ORDER BY 1
;


SELECT *
FROM STUDENT s 

--6개만 나오게 하기
--
--부서 테이블에서 상위 부서 이름을 출력하라 DEPARTMENT,SELF JOIN
SELECT D.DNAME|| '의 소속학과는 '||NVL2(D2.DNAME,D2.DNAME||'입니다.','없습니다')--NULL값 비교후 입니다 없습니다로 나옴
FROM DEPARTMENT d 
LEFT JOIN DEPARTMENT d2 ON D.COLLEGE=D2.DEPTNO ;

SELECT *
FROM DEPARTMENT d ,DEPARTMENT d2 

--학생의 학번, 이름,담당교수의 교수번호,교수이름,학생의 소속학과이름을 조회
--단 모든 학생의 정보를 조회
--SELECT DEPTNO ,NAME,DNAME 
SELECT STUDNO,S.NAME ,PROFNO,P.NAME ,DNAME
FROM STUDENT s 
NATURAL JOIN DEPARTMENT d 
LEFT JOIN PROFESSOR p  USING(PROFNO);

--서브쿼리(SELECT)
--학번 ,이름 ,학과번호,학과이름 조회
SELECT STUDNO ,NAME,DEPTNO,
(SELECT DNAME FROM DEPARTMENT d WHERE D.DEPTNO=S.DEPTNO) DNAME,--스칼라 값 단일 값
(SELECT NAME FROM PROFESSOR p  WHERE P.PROFNO=S.PROFNO) PNAME
FROM STUDENT S;