--7일차----------------------------------------------------------------------------------------------------
--사용자 아이디가 jun123인 학생과 같은 학년인 학생의 학번, 이름, 학년을 조회
--101번학과 학생들의 평균몸무게보다 적은 학생들의 학번, 학과번호, 몸무게를 조회
--20101번 학생과 학년이 같고, 키는 20101번 학생보다 큰 학생의 이름, 학년, 키를 출력하여라
--정보미디어학부에 소속된 학생의 학번, 이름, 학과번호 조회
--차근차근 안에있는거부터 하면됨. 함수처럼
--4학년 학생 중 키가 제일 작은 학생보다 키가 큰 학생의 학번, 이름, 키를 출력
--동일한 문제 MIN을 이용해서
--4학년 학생중에서 키가 가장 큰 학생보다 큰 학생의 학번, 이름, 키를 조회
--MAX이용
--보직수당을 받는 교수가 존재한다면 교수들의 교수번호, 이름, 급여, 수당, 급여+수당을 조회
--	WHERE COMM IS NOT NULL
--학년별 체중이 최소인 학생의 이름, 학년, 체중을 조회 PAIRWISE
--행개수를 예상하면서... UNPAIRWISE
--학년별 체중이 최소인 학생의 이름, 학년, 체중을 조회
--뭐가 추가되었을까 확인해보자..
--상호연관 서브쿼리. 눈으로 확인못하니까 비추천.. 다른방법사용..?
--학과별 평균 키보다 키가 큰 학생의 이름, 학과번호, 키를 출력
--
--달력만들기
--DML
--홍길동 데이터 입력
--학번 : 10110, 이름 : '홍길동', USERID : 'hong', GRADE : '1', IDNUM : '85101010101',
--BIRTHDATE : '85/10/10', TEL : '041)123-4567', HEIGHT : 170, WEIGHT : 70, DEPTNO : 101, PROFNO : 9903
--AUTO COMMIT -> MANUAL COMMIT으로 변경후 추가 여러번 함.
--트랜잭션 커밋 전에는 외부에서 알수없다.
--롤백하면 마지막 커밋 전으로 간다.
--예매할때 중요하게 쓰이는 개념임
--학과테이블에 DEPTNO : 300, DNAME: 생명공학부를 추가
--빈문자는 NULL로 취급된다.
--US_EN, UK_EN, KO
--날짜입력시에 TO_DATE 사용하는걸 추천함
--교수테이블에 날짜입력
--만약 삭제하고싶으면 WHERE을 사용
--SYSDATE를 넣으면 시분초 정보가 들어감..TRUNC로 자르면 일까지 들어감~!
--다중행입력은 별로안씀
--VALUES 대신 서브쿼리
--학생과 동일한 테이블 생성, 단 데이터 없음
