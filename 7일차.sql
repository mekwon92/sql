--사용자 아이디가 jun123인 학생과 같은 학년인 학생의 학번, 이름, 학년을 조회
SELECT STUDNO ,NAME ,GRADE
FROM STUDENT s 
WHERE GRADE = (SELECT GRADE 
	FROM STUDENT s 
	WHERE USERID = 'jun123');
	
--101번학과 학생들의 평균몸무게보다 적은 학생들의 학번, 학과번호, 몸무게를 조회
SELECT STUDNO ,DEPTNO ,WEIGHT 
FROM STUDENT s 
WHERE WEIGHT <
	(SELECT AVG(WEIGHT) 
	FROM STUDENT s
	WHERE DEPTNO = 101);

--20101번 학생과 학년이 같고, 키는 20101번 학생보다 큰 학생의 이름, 학년, 키를 출력하여라
SELECT GRADE
FROM STUDENT s 
WHERE STUDNO = 20101;

SELECT HEIGHT 
FROM STUDENT s 
WHERE STUDNO = 20101;

SELECT NAME, GRADE ,HEIGHT 
FROM STUDENT s 
WHERE GRADE = (SELECT GRADE
				FROM STUDENT s 
				WHERE STUDNO = 20101) 
AND HEIGHT > (SELECT HEIGHT 
				FROM STUDENT s 
				WHERE STUDNO = 20101);
			
--정보미디어학부에 소속된 학생의 학번, 이름, 학과번호 조회
--차근차근 안에있는거부터 하면됨. 함수처럼

SELECT DEPTNO 
	FROM DEPARTMENT 
	WHERE DNAME = '정보미디어학부';			
			
SELECT DEPTNO 
FROM DEPARTMENT d 
WHERE COLLEGE = (SELECT DEPTNO 
	FROM DEPARTMENT 
	WHERE DNAME = '정보미디어학부');


SELECT STUDNO ,NAME ,DEPTNO
FROM STUDENT s 
WHERE DEPTNO IN(101, 102);


SELECT STUDNO ,NAME ,DEPTNO 
FROM STUDENT s 
WHERE DEPTNO IN (SELECT DEPTNO 
	FROM DEPARTMENT d 
	WHERE COLLEGE = (SELECT DEPTNO 
	FROM DEPARTMENT 
	WHERE DNAME = '정보미디어학부'));

--4학년 학생 중 키가 제일 작은 학생보다 키가 큰 학생의 학번, 이름, 키를 출력
SELECT HEIGHT
FROM STUDENT s 
WHERE GRADE = 4;

SELECT HEIGHT 
FROM STUDENT s 
WHERE HEIGHT > ANY (SELECT HEIGHT
	FROM STUDENT s 
	WHERE GRADE = 4);

--동일한 문제 MIN을 이용해서
SELECT HEIGHT
FROM STUDENT s 
WHERE HEIGHT > (
	SELECT MIN(HEIGHT)
	FROM STUDENT s 
	WHERE GRADE = 4);

--4학년 학생중에서 키가 가장 큰 학생보다 큰 학생의 학번, 이름, 키를 조회
SELECT HEIGHT
FROM STUDENT s 
WHERE GRADE = 4;

SELECT STUDNO ,NAME , HEIGHT 
FROM STUDENT s 
WHERE HEIGHT > ALL(SELECT HEIGHT
	FROM STUDENT s 
	WHERE GRADE = 4); --출제...예정..?인데.. 이해를..잘..해야할듯..?

--MAX이용
SELECT STUDNO, NAME, HEIGHT
FROM STUDENT s 
WHERE HEIGHT > (
	SELECT MAX(HEIGHT)
	FROM STUDENT
	WHERE GRADE = 4);

--보직수당을 받는 교수가 존재한다면 교수들의 교수번호, 이름, 급여, 수당, 급여+수당을 조회
SELECT *
FROM PROFESSOR p 
WHERE COMM IS NOT NULL;

SELECT PROFNO , NAME , SAL ,COMM , SAL+NVL(COMM,0) SALCOM
FROM PROFESSOR p 
WHERE EXISTS (
	SELECT *
	FROM PROFESSOR p 
--	WHERE COMM IS NOT NULL
	WHERE 1=1
);

--학년별 체중이 최소인 학생의 이름, 학년, 체중을 조회 PAIRWISE
SELECT GRADE, MIN(WEIGHT)
FROM STUDENT s 
GROUP BY GRADE;

SELECT NAME, GRADE, WEIGHT 
FROM STUDENT s 
WHERE (GRADE, WEIGHT) IN (
	SELECT GRADE, MIN(WEIGHT)
	FROM STUDENT s 
	GROUP BY GRADE
	);

--행개수를 예상하면서... UNPAIRWISE
--학년별 체중이 최소인 학생의 이름, 학년, 체중을 조회
SELECT DISTINCT GRADE
FROM STUDENT s;

SELECT MIN(WEIGHT)
FROM STUDENT s 
GROUP BY GRADE;

SELECT NAME, GRADE, WEIGHT 
FROM STUDENT s 
WHERE GRADE IN (
	SELECT DISTINCT GRADE
	FROM STUDENT s
)
AND WEIGHT IN(
	SELECT MIN(WEIGHT)
	FROM STUDENT s 
	GROUP BY GRADE
);

--뭐가 추가되었을까 확인해보자..
SELECT NAME, GRADE, WEIGHT 
FROM STUDENT s 
WHERE GRADE IN (
	SELECT DISTINCT GRADE
	FROM STUDENT s
)
AND WEIGHT IN(
	SELECT MIN(WEIGHT)
	FROM STUDENT s 
	GROUP BY GRADE
)
MINUS 
SELECT NAME, GRADE, WEIGHT 
FROM STUDENT s 
WHERE (GRADE, WEIGHT) IN (
	SELECT GRADE, MIN(WEIGHT)
	FROM STUDENT s 
	GROUP BY GRADE
);

--상호연관 서브쿼리. 눈으로 확인못하니까 비추천.. 다른방법사용..?
--학과별 평균 키보다 키가 큰 학생의 이름, 학과번호, 키를 출력
SELECT AVG(HEIGHT)
FROM STUDENT;

SELECT NAME, DEPTNO ,HEIGHT 
FROM STUDENT s1
WHERE HEIGHT > (
	SELECT AVG(HEIGHT)
	FROM STUDENT s2
	WHERE s2.deptno = s1.DEPTNO 
	-- 여기서 한줄씩확인하면서 만족안하는건 밖으로 빠짐,?
);

SELECT DEPTNO ,AVG(HEIGHT)
FROM STUDENT s 
GROUP BY DEPTNO ;

--
SELECT AVG(HEIGHT) 
FROM STUDENT s 
WHERE DEPTNO = 101;

SELECT * FROM STUDENT s ;

--달력만들기
SELECT COUNT(*) FROM DICT;
SELECT MOD(12,10) FROM DUAL;
SELECT TO_CHAR(TO_DATE('2024-09-19','YYYY-MM-DD'),'W') FROM DUAL;


SELECT MAX(SUN),MAX(MON) FROM (
	SELECT 1 SUN, NULL MON, NULL, NULL, NULL, NULL, NULL FROM DUAL
	UNION
	SELECT NULL, 2, NULL, NULL, NULL, NULL, NULL FROM DUAL
);

SELECT 
	MAX(DECODE(MOD(RN, 7),1, RN)) SUN
	,MAX(DECODE(MOD(RN, 7),2, RN)) MON
	,MAX(DECODE(MOD(RN, 7),3, RN)) TUE
	,MAX(DECODE(MOD(RN, 7),4, RN)) WED
	,MAX(DECODE(MOD(RN, 7),5, RN)) THU
	,MAX(DECODE(MOD(RN, 7),6, RN)) FRI
	,MAX(DECODE(MOD(RN, 7),0, RN)) SAT
FROM (
	SELECT ROWNUM RN,
		TO_CHAR(TO_DATE('2024-09-' || LTRIM(TO_CHAR(ROWNUM,'00'))),'W') WEEK
	FROM DICT 
	WHERE ROWNUM <= TO_CHAR(LAST_DAY(TO_DATE('2024-9','YYYY-MM')),'DD')
)
GROUP BY WEEK
ORDER BY WEEK;



--DML
--홍길동 데이터 입력
--학번 : 10110, 이름 : '홍길동', USERID : 'hong', GRADE : '1', IDNUM : '85101010101',
--BIRTHDATE : '85/10/10', TEL : '041)123-4567', HEIGHT : 170, WEIGHT : 70, DEPTNO : 101, PROFNO : 9903

INSERT INTO STUDENT
VALUES (10110, '홍길동','hong','1','8510101010101','85/10/10','041)123-4567',170, 70, 101, 9903);

SELECT * FROM STUDENT s ;


SELECT COLUMN_NAME, COLUMN_ID
FROM USER_TAB_COLS WHERE TABLE_NAME = 'STUDENT'; 


--AUTO COMMIT -> MANUAL COMMIT으로 변경후 추가 여러번 함.
--트랜잭션 커밋 전에는 외부에서 알수없다.
ROLLBACK;
--롤백하면 마지막 커밋 전으로 간다.
--예매할때 중요하게 쓰이는 개념임

COMMIT; --영구적으로 데이터 저장

--학과테이블에 DEPTNO : 300, DNAME: 생명공학부를 추가
INSERT INTO DEPARTMENT(DEPTNO, DNAME, COLLEGE, LOC) VALUES (300, '생명공학부', NULL,'');
--빈문자는 NULL로 취급된다.
SELECT * FROM DEPARTMENT d ;

--US_EN, UK_EN, KO
--날짜입력시에 TO_DATE 사용하는걸 추천함

--교수테이블에 날짜입력
INSERT INTO PROFESSOR(PROFNO, NAME, POSITION, HIREDATE, DEPTNO) VALUES (9920, '최윤식', '조교수', TO_DATE('2006-01-01','YYYY-MM-DD'), 102);

SELECT * FROM PROFESSOR p ;

--만약 삭제하고싶으면 WHERE을 사용
DELETE PROFESSOR WHERE PROFNO = 9920; 

--SYSDATE를 넣으면 시분초 정보가 들어감..TRUNC로 자르면 일까지 들어감~!

INSERT INTO PROFESSOR VALUES(9910, '백미선', 'white', '전임강사', 200, TRUNC(SYSDATE), 10, 101);

--다중행입력은 별로안씀
--VALUES 대신 서브쿼리
--학생과 동일한 테이블 생성, 단 데이터 없음
CREATE TABLE T_STUDENT AS
SELECT * FROM STUDENT WHERE 1=0;

CREATE TABLE TT_STUDENT AS
SELECT * FROM STUDENT s WHERE 1=1;

SELECT * FROM T_STUDENT;

INSERT INTO T_STUDENT
SELECT * FROM STUDENT;





